version: "3.9"

services:
  config-service:
    build:
      context: .
      target: config-service
    container_name: config-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    restart: always
    ports:
      - '8888:8888'

  server:
    build:
      context: .
      target: discovery-service
    container_name: discovery-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    restart: always
    ports:
      - '8761:8761'

  postgres_media_service:
    image: postgres:15.6-alpine3.19
    container_name: media_db
    environment:
      POSTGRES_DB: ${MEDIA_DB}
      POSTGRES_USER: ${MEDIA_DB_USERNAME}
      POSTGRES_PASSWORD: ${MEDIA_DB_PASSWORD}
    ports:
      - "5433:5432"

  postgres_user_service:
    image: postgres:15.6-alpine3.19
    container_name: users_db
    environment:
      POSTGRES_DB: ${USER_DB}
      POSTGRES_USER: ${USER_DB_USERNAME}
      POSTGRES_PASSWORD: ${USER_DB_PASSWORD}
    ports:
      - "5434:5432"

  client_media_service:
    build:
      context: .
      target: media-service
    container_name: media-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker, resource
    depends_on:
      - postgres_media_service
    restart: always

  client_user_service:
    build:
      context: .
      target: user-service
    container_name: user-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker, resource
    depends_on:
      - postgres_user_service
    restart: always

  gateway:
    build:
      context: .
      target: gateway-service
    container_name: gateway-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    restart: always
    ports:
      - '8765:8765'
