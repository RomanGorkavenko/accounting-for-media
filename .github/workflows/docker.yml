name: docker image ci
on:
  push:
    branches: [ "master" ]

jobs:
  build:
    name: 'Build & Publish'
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4

      - name: "Set up QEMU"
        uses: docker/setup-qemu-action@v3

      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v3

      - name: "Login to GitHub Registry"
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: "Build&Deploy discovery-service"
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}:./server.Dockerfile"
          push: true
          tags: |

            ${{ secrets.DOCKERHUB_USERNAME }}/discovery-service:latest


      - name: "Build&Deploy media-service"
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/media-service:${{ github.event.release.tag_name }}
            ${{ secrets.DOCKERHUB_USERNAME }}/media-service:latest


      - name: "Build&Deploy user-service"
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/user-service:${{ github.event.release.tag_name }}
            ${{ secrets.DOCKERHUB_USERNAME }}/user-service:latest


      - name: "Build&Deploy gateway-service"
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/gateway-service:${{ github.event.release.tag_name }}
            ${{ secrets.DOCKERHUB_USERNAME }}/gateway-service:latest

      - name: "Build&Deploy nginx-service"
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/nginx-service:${{ github.event.release.tag_name }}
            ${{ secrets.DOCKERHUB_USERNAME }}/nginx-service:latest


      - name: "Run deploy on server"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            sudo docker-compose -f docker-compose.prod-ci.yml -p prod pull
            sudo docker-compose -f docker-compose.prod-ci.yml -p prod up -d